module.exports = {
	root: true,
	env: {
		commonjs: true,
		es6: true,
		es2021: true,
		node: true,
		jest: true,
	},
	extends: ['airbnb-base', 'eslint:recommended', 'plugin:node/recommended', 'plugin:sonarjs/recommended', 'prettier'],
	plugins: ['sonarjs', '@typescript-eslint', 'unused-imports'],
	globals: {
		Atomics: 'readonly',
		SharedArrayBuffer: 'readonly',
	},
	parserOptions: {
		ecmaVersion: 13,
	},
	rules: {
		'no-restricted-imports': [
			'error',
			{
				paths: [
					{
						name: '@nestjs/common',
						importNames: ['Logger'],
						message: 'Use AppLoggerService instead of Logger.',
					},
				],
			},
		],
		curly: ['error', 'all'],
		'padding-line-between-statements': [
			'error',
			{ blankLine: 'always', prev: 'block-like', next: '*' },
			{ blankLine: 'always', prev: '*', next: 'block-like' },
		],
		'import/no-relative-packages': 'off',
		'no-multi-str': 'off',
		'no-underscore-dangle': 0,
		'import/no-unresolved': 0,
		'max-len': [
			'warn',
			{
				code: 120,
				tabWidth: 4,
				ignoreUrls: true,
				ignoreStrings: true,
				ignoreTemplateLiterals: true,
			},
		],
		'no-console': 'error',
		indent: ['error', 'tab'],
		'no-restricted-syntax': 'off',
		'no-return-await': 'error',
		'linebreak-style': ['error', 'unix'],
		quotes: ['error', 'single'],
		semi: ['error', 'always'],
		'block-spacing': ['error', 'always'],
		'comma-style': ['error', 'last'],
		'comma-spacing': ['error', { before: false, after: true }],
		'eol-last': ['error'],
		'func-call-spacing': ['error', 'never'],
		'key-spacing': ['error', { beforeColon: false, afterColon: true, mode: 'minimum' }],
		'keyword-spacing': ['error', { before: true, after: true, overrides: { function: { after: false } } }],
		'arrow-parens': ['error', 'always'],
		'object-shorthand': ['error', 'always'],
		'prefer-arrow-callback': ['error'],
		'no-else-return': 'error',
		'vars-on-top': ['error'],
		'no-loop-func': ['error'],
		eqeqeq: ['error', 'always'],
		'require-atomic-updates': 'error',
		'no-template-curly-in-string': 'error',
		'array-callback-return': 'error',
		'block-scoped-var': 'error',
		'node/no-unpublished-require': 'off',
		'node/no-missing-require': 'off',
		'no-process-exit': 'off',
		'no-plusplus': 'off',
		'import/prefer-default-export': 'off',
		'no-restricted-exports': ['error', { restrictDefaultExports: { direct: true } }],
		'padding-line-between-statements': ['error', { blankLine: 'always', prev: ['block-like'], next: 'return' }],
		'no-continue': 'off',
		'no-use-before-define': 'error',
		'lines-between-class-members': 'off',
		'import/extensions': [
			'error',
			{
				explorer: 'always',
				service: 'always',
				module: 'always',
				controller: 'always',
				resolver: 'always',
				errors: 'always',
				error: 'always',
			},
		],
		'unused-imports/no-unused-imports': 'warn',
		'import/export': 'off',
	},
	overrides: [
		{
			files: ['**.ts'],
			plugins: ['sonarjs', '@typescript-eslint'],
			extends: [
				'eslint:recommended',
				'plugin:@typescript-eslint/eslint-recommended',
				'plugin:@typescript-eslint/recommended',
				'airbnb-typescript/base',
				'plugin:sonarjs/recommended',
			],
			parser: '@typescript-eslint/parser',
			parserOptions: {
				project: './tsconfig.json',
				tsconfigRootDir: __dirname,
				createDefaultProgram: true,
			},
			rules: {
				'@typescript-eslint/naming-convention': 'off',
				indent: 'off',
				'brace-style': ['error', '1tbs'],
				'@typescript-eslint/indent': [
					'error',
					'tab',
					{
						MemberExpression: 1,
						ignoredNodes: [
							'Decorator + ClassProperty',
							'Decorator + ClassMethod',
							'FunctionExpression > .params[decorators.length > 0]',
							'FunctionExpression > .params > :matches(Decorator, :not(:first-child))',
							'ClassBody.body > PropertyDefinition[decorators.length > 0] > .key',
						],
					},
				],
				'node/no-unsupported-features/es-syntax': 'off',
				'node/no-unpublished-import': 'off',
				'node/no-missing-import': 'off',
				'@typescript-eslint/ban-ts-comment': 'off',
				'@typescript-eslint/no-explicit-any': 'off',
				'no-case-declarations': 'off',
				'@typescript-eslint/lines-between-class-members': 'off',
				'max-classes-per-file': 'off',
				'class-methods-use-this': 'off',
				'import/no-extraneous-dependencies': 'off',
				'node/no-extraneous-import': 'off',
				'object-curly-newline': [
					'error',
					{
						ObjectExpression: { multiline: true, minProperties: 4 },
						ObjectPattern: { multiline: true, minProperties: 4 },
						ImportDeclaration: 'never',
						ExportDeclaration: { multiline: true, minProperties: 4 },
					},
				],
				'@typescript-eslint/no-unused-vars': [
					'error',
					{ varsIgnorePattern: '^[A-Z]', ignoreRestSiblings: true },
				],
				'@typescript-eslint/no-use-before-define': ['error', { functions: false, classes: false }],
				'@typescript-eslint/no-unused-expressions': ['error', { allowShortCircuit: true, allowTernary: true }],
				'no-param-reassign': 'warn',
			},
		},
	],
};
